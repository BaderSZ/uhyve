name: Build and test

on:
  pull_request:
  push:
    branches:
      - staging
      - trying
  schedule:
    - cron: '0 3 * * 1'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Cargo tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Test
      run: |
        cargo test --lib -- --skip test_vm
        cargo test --doc

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Build
      run: cargo build
    - name: Build with instrument feature
      run: cargo clean && RUSTFLAGS="-Z instrument-mcount" cargo build
    - name: Compile, but don't run benchmarks
      run: cargo bench --no-run

  kernel-tests:
    name: Rusty-Hermit Kernel based integration tests
    runs-on: [self-hosted]
    steps:
    - name: Install gdb
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends gdb
    - uses: actions/checkout@v2
      with:
        lfs: true
    - run: git lfs checkout benches_data/hello_world
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Integration Tests
      run: cargo test --test '*' -- --skip gdb

  coverage:
    name: Coverage
    runs-on: [self-hosted]
    steps:
    - name: Install gdb
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends gdb
    - uses: actions/checkout@v2
      with:
        lfs: true
    - run: git lfs checkout benches_data/hello_world
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Install cargo-llvm-cov
      run: curl -LsSf https://github.com/taiki-e/cargo-llvm-cov/releases/latest/download/cargo-llvm-cov-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin
    - name: Generate code coverage
      run: cargo llvm-cov --lcov --output-path lcov.info -- --skip gdb
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: lcov.info
        fail_ci_if_error: true
